Description: Ubuntu webserver stack


Resources:

  appSecuritygroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: ex1_student3_sg1
        GroupDescription: "Allow all/tcp out and ssh/tcp, http/tcp in"
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: "22"
            ToPort: "22"
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: "80"
            ToPort: "80"
            CidrIp: 0.0.0.0/0
        VpcId: vpc-b66b6ad1
        Tags:
          - Key: Name
            Value: !Sub "CloudFormation-${AWS::StackName}-AppSecurityGroup"


  Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0773391ae604c49a4            #Ubuntu Server 16.04
      KeyName: lab_key_3
      SecurityGroupIds:
        - !Ref appSecuritygroup
      Tags:
        - Key: Name
          Value: "student3-EX1-INSTANCE1"

  Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0773391ae604c49a4            #Ubuntu Server 16.04
      KeyName: lab_key_3
      SecurityGroupIds:
        - !Ref appSecuritygroup
      Tags:
        - Key: Name
          Value: "student3-EX1-INSTANCE2"

  appLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          ConfigSetScript:
            - ExecuteScripts
        ExecuteScripts:
          files:
            "/root/InstallApache2.sh":
              content: !Sub |
                #!/bin/bash
                # Installs Apache2

                YOURID=$1
                REGION=$2

                # Set a settings for non interactive mode
                  export DEBIAN_FRONTEND=noninteractive
                  export PATH=$PATH:/usr/local/sbin/
                  export PATH=$PATH:/usr/sbin/
                  export PATH=$PATH:/sbin

                apt update -y
                apt install -y apache2

              mode: '000755'
              owner: root
              group: root
          commands:
            01_installMEMEGEN:
              command: "/root/InstallApache2.sh"
              cwd: "~"
  

  lab3ELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      SecurityGroups:
        - !Ref appSecuritygroup
      Instances:
        - !Ref Instance1
        - !Ref Instance2
      Listeners:
        - LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: TCP
      Subnets:
        - subnet-4481bd0d
        - subnet-9587f0ce
        - subnet-1e260c79
      Tags:
        - Key: Name
          Value: !Sub "CloudFormation-${AWS::StackName}-ElasticLoadBalancer"
